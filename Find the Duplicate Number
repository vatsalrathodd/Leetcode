class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        // sort(nums.begin(), nums.end());
        // // khali nums.size() lakhsi toh array out of bound avse
        // for(int i=0; i<nums.size()-1; i++)
        // {
        //     if(nums[i] == nums[i+1])
        //     {
        //         return nums[i];
        //     }
        // }
        // return -1;

        //2nd method

        // int ans=-1;
        // for(int i=0; i<nums.size(); i++)
        // {
        //     int index = abs(nums[i]);

        //     // checking already visited or not?
        //     if(nums[index]<0)
        //     {
        //         ans = index;
        //         break;
        //     }

        //     nums[index]  *= -1; //marking the element's indexes
        // }
        // return ans;


        // 3rd method  ===> positioning method

        while(nums[0] != nums[nums[0]])
        {
            swap(nums[0], nums[nums[0]]);
        }

        return nums[0];


        // Using MAP Method
        // unordered_map<int,int>map;
        // for(int i=0;i<nums.size();i++){
        //     map[nums[i]]++;
        // }
        // int temp=0;
        // int ans=0;
        // for(auto const m:map){
        //     if(m.second>1){
        //         temp=m.second;
        //         ans = m.first;
        //     }
        // }
        // return ans;
    }
};
