class Solution {
public:
    void sortColors(vector<int>& nums) {
        //sort(nums.begin(),nums.end());

        //2nd method:
        // count method
        // int zero = 0, one = 0, two = 0;

        // for(int i=0; i<nums.size(); i++)
        // {
        //     if (nums[i] == 0)
        //     {
        //         zero++;
        //     }
        //     else if (nums[i] == 1)
        //     {   
        //         one++;
        //     }
        //     else
        //     {
        //         two++;
        //     }

        // }

        // // expanding the collecting counts

        // int i=0;

        // while(zero--)
        // {
        //     nums[i] = 0;
        //     i++;
        // }
        // while(one--)
        // {
        //     nums[i] = 1;
        //     i++;
        // }
        // while(two--)
        // {
        //     nums[i] = 2;
        //     i++;
        // }


        // 3 pointer approach:

        int l = 0, m = 0, h = nums.size()-1;

        while(m<=h)
        {
            if(nums[m] == 0)
            {
                swap(nums[l], nums[m]);
                l++;
                m++;
            }

            else if(nums[m] == 1)
            {
                m++;
            }

            else{
                swap(nums[m], nums[h]);
                h--;
            }
        }
    }
};
